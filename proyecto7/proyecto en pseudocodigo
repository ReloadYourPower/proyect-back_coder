CLASE ProductManager:
    ATRIBUTOS:
        nextId <- 1
        products <- []

    MÉTODO addProduct(title, description, price, stock, thumbnaild, code):
        // Agrega un producto al inventario
        id <- nextId
        Incrementar nextId
        Crear un nuevo objeto producto con los parámetros dados
        SI el código del producto ya existe en otro producto:
            Imprimir "El código ya existe en otro producto."
        SINO:
            Agregar el nuevo producto al array de productos
            Imprimir "Producto agregado al inventario con ID [id]."

    MÉTODO codeExist(code):
        // Verifica si un código de producto ya existe en otro producto
        PARA CADA producto EN products:
            SI el código del producto es igual a code:
                Devolver VERDADERO
        Devolver FALSO

    MÉTODO getProducts():
        // Obtiene todos los productos del inventario
        Devolver products

    MÉTODO getProductById(id):
        // Obtiene un producto por su ID
        PARA CADA producto EN products:
            SI el ID del producto es igual a id:
                Imprimir "Datos del producto con ID: [id]"
                Devolver el producto
        Imprimir "Producto no encontrado."
        Devolver NULO

// Ejemplo de uso
manager <- Crear una nueva instancia de la clase ProductManager
manager.addProduct('Título', 'Descripción', 10, 100, 'imagen.jpg', 'ABC123')
manager.addProduct('Título1', 'Descripción1', 10, 100, 'imagen1.jpg', 'ABC1243')
manager.addProduct('Título2', 'Descripción1¡', 10, 100, 'imagen2.jpg', 'AB4C123')

Imprimir "Todos los productos:"
Imprimir manager.getProducts()

Imprimir manager.getProductById(2)

Imprimir manager.getProductById(3)
